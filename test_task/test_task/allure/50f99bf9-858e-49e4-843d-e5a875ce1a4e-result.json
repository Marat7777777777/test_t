{"name": "Тест выхода из аккаунта", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome=118.0.5993.88)\nStacktrace:\n0   chromedriver                        0x0000000109ca8e08 chromedriver + 5025288\n1   chromedriver                        0x0000000109c9fc23 chromedriver + 4987939\n2   chromedriver                        0x0000000109841ca6 chromedriver + 408742\n3   chromedriver                        0x000000010989291f chromedriver + 739615\n4   chromedriver                        0x00000001098851aa chromedriver + 684458\n5   chromedriver                        0x00000001098b84e2 chromedriver + 894178\n6   chromedriver                        0x0000000109884a28 chromedriver + 682536\n7   chromedriver                        0x00000001098b869e chromedriver + 894622\n8   chromedriver                        0x00000001098d4571 chromedriver + 1009009\n9   chromedriver                        0x00000001098b82b3 chromedriver + 893619\n10  chromedriver                        0x0000000109882eb9 chromedriver + 675513\n11  chromedriver                        0x00000001098840ee chromedriver + 680174\n12  chromedriver                        0x0000000109c6a819 chromedriver + 4769817\n13  chromedriver                        0x0000000109c6f893 chromedriver + 4790419\n14  chromedriver                        0x0000000109c7666e chromedriver + 4818542\n15  chromedriver                        0x0000000109c705bd chromedriver + 4793789\n16  chromedriver                        0x0000000109c4298c chromedriver + 4606348\n17  chromedriver                        0x0000000109c8eb78 chromedriver + 4918136\n18  chromedriver                        0x0000000109c8ed30 chromedriver + 4918576\n19  chromedriver                        0x0000000109c9f85e chromedriver + 4986974\n20  libsystem_pthread.dylib             0x00007ff80c9cb259 _pthread_start + 125\n21  libsystem_pthread.dylib             0x00007ff80c9c6c7b thread_start + 15", "trace": "browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"cea687aebfbeee4f3a9a3a6b431e5421\")>\n\n    @allure.title(\"Тест выхода из аккаунта\")\n    def test_logout(browser):\n        \"\"\"\n        Тест выходит из личного кабинета\n        Проверяется, что страница прогружается корректно\n        \"\"\"\n    \n        with allure.step(\"Открытие стартовой страницы ресурса\"):\n            browser.get(LINK)\n    \n        login_link = browser.find_element(By.XPATH, SELECTORS['login_button'])\n>       login_link.click()\n\ntests/smoke_tests.py:51: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nvenv/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\nvenv/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\nvenv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x1043d5f30>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...ff80c9cb259 _pthread_start + 125\\\\n21  libsystem_pthread.dylib             0x00007ff80c9c6c7b thread_start + 15\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: chrome=118.0.5993.88)\nE       Stacktrace:\nE       0   chromedriver                        0x0000000109ca8e08 chromedriver + 5025288\nE       1   chromedriver                        0x0000000109c9fc23 chromedriver + 4987939\nE       2   chromedriver                        0x0000000109841ca6 chromedriver + 408742\nE       3   chromedriver                        0x000000010989291f chromedriver + 739615\nE       4   chromedriver                        0x00000001098851aa chromedriver + 684458\nE       5   chromedriver                        0x00000001098b84e2 chromedriver + 894178\nE       6   chromedriver                        0x0000000109884a28 chromedriver + 682536\nE       7   chromedriver                        0x00000001098b869e chromedriver + 894622\nE       8   chromedriver                        0x00000001098d4571 chromedriver + 1009009\nE       9   chromedriver                        0x00000001098b82b3 chromedriver + 893619\nE       10  chromedriver                        0x0000000109882eb9 chromedriver + 675513\nE       11  chromedriver                        0x00000001098840ee chromedriver + 680174\nE       12  chromedriver                        0x0000000109c6a819 chromedriver + 4769817\nE       13  chromedriver                        0x0000000109c6f893 chromedriver + 4790419\nE       14  chromedriver                        0x0000000109c7666e chromedriver + 4818542\nE       15  chromedriver                        0x0000000109c705bd chromedriver + 4793789\nE       16  chromedriver                        0x0000000109c4298c chromedriver + 4606348\nE       17  chromedriver                        0x0000000109c8eb78 chromedriver + 4918136\nE       18  chromedriver                        0x0000000109c8ed30 chromedriver + 4918576\nE       19  chromedriver                        0x0000000109c9f85e chromedriver + 4986974\nE       20  libsystem_pthread.dylib             0x00007ff80c9cb259 _pthread_start + 125\nE       21  libsystem_pthread.dylib             0x00007ff80c9c6c7b thread_start + 15\n\nvenv/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementNotInteractableException"}, "description": "\n    Тест выходит из личного кабинета\n    Проверяется, что страница прогружается корректно\n    ", "steps": [{"name": "Открытие стартовой страницы ресурса", "status": "passed", "start": 1698314293026, "stop": 1698314293827}], "start": 1698314293026, "stop": 1698314293844, "uuid": "60b20b5a-6a77-45a9-bba5-b599bddbcdd3", "historyId": "efbaf7e5dc7bfc2525b0edda208a1bc3", "testCaseId": "efbaf7e5dc7bfc2525b0edda208a1bc3", "fullName": "tests.smoke_tests#test_logout", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "smoke_tests"}, {"name": "host", "value": "mac1581okko.local"}, {"name": "thread", "value": "24329-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.smoke_tests"}]}